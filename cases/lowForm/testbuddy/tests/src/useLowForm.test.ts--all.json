{"numFailedTestSuites":1,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1694322432386,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1694322434378,"message":"  ● Test suite failed to run\n\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'AnyObjectSchema'.\n\n    \u001b[7m6\u001b[0m     const schema: AnyObjectSchema = {};\n    \u001b[7m \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m9\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'validateForm'.\n\n    \u001b[7m9\u001b[0m     const result = await validateForm(formValues, schema);\n    \u001b[7m \u001b[0m \u001b[91m                         ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m22\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'AnyObjectSchema'.\n\n    \u001b[7m22\u001b[0m     const schema: AnyObjectSchema = {};\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'validateForm'.\n\n    \u001b[7m25\u001b[0m     const result = await validateForm(formValues, schema);\n    \u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m38\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'AnyObjectSchema'.\n\n    \u001b[7m38\u001b[0m     const schema: AnyObjectSchema = {\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m39\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yup'.\n\n    \u001b[7m39\u001b[0m       field1: yup.string().required('Field 1 is required'),\n    \u001b[7m  \u001b[0m \u001b[91m              ~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m43\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'validateForm'.\n\n    \u001b[7m43\u001b[0m     const result = await validateForm(formValues, schema);\n    \u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'AnyObjectSchema'.\n\n    \u001b[7m58\u001b[0m     const schema: AnyObjectSchema = {\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m59\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yup'.\n\n    \u001b[7m59\u001b[0m       field1: yup.string().required('Field 1 is required'),\n    \u001b[7m  \u001b[0m \u001b[91m              ~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m60\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yup'.\n\n    \u001b[7m60\u001b[0m       field2: yup.string().required('Field 2 is required'),\n    \u001b[7m  \u001b[0m \u001b[91m              ~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'validateForm'.\n\n    \u001b[7m64\u001b[0m     const result = await validateForm(formValues, schema);\n    \u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'validateField'.\n\n    \u001b[7m74\u001b[0m   const result = await validateField('name', 'John');\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'validateField'.\n\n    \u001b[7m79\u001b[0m   const result = await validateField('age', -10);\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'validateField'.\n\n    \u001b[7m84\u001b[0m   const result = await validateField('email', 'invalid-email');\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getErrorAtField'.\n\n    \u001b[7m93\u001b[0m   const result = getErrorAtField(field, formValues);\n    \u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m103\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getErrorAtField'.\n\n    \u001b[7m103\u001b[0m   const result = getErrorAtField(field, formValues);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m113\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getErrorAtField'.\n\n    \u001b[7m113\u001b[0m   const result = getErrorAtField(field, formValues);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m120\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'error' implicitly has an 'any' type.\n\n    \u001b[7m120\u001b[0m     const result = (error) => Boolean(error);\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m126\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'error' implicitly has an 'any' type.\n\n    \u001b[7m126\u001b[0m     const result = (error) => Boolean(error);\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m138\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"first\"' can't be used to index type '{}'.\n      Property 'first' does not exist on type '{}'.\n\n    \u001b[7m138\u001b[0m   const result = acc[curr] = errorMessages[index];\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m151\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"second\"' can't be used to index type '{ first: string; }'.\n      Property 'second' does not exist on type '{ first: string; }'.\n\n    \u001b[7m151\u001b[0m   const result = acc[curr] = errorMessages[index];\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m164\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"third\"' can't be used to index type '{ first: string; second: string; }'.\n      Property 'third' does not exist on type '{ first: string; second: string; }'.\n\n    \u001b[7m164\u001b[0m   const result = acc[curr] = errorMessages[index];\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m168\u001b[0m:\u001b[93m82\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2355: \u001b[0mA function whose declared type is neither 'void' nor 'any' must return a value.\n\n    \u001b[7m168\u001b[0m const validateSubmission = async (formValues: Record<string, any>, schema: any): Promise<LowFormFormState> => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m78\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m188\u001b[0m   registerElement: (key: string, defaultValue?: string | boolean) => (event: SyntheticEvent) => void;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                             ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m189\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m189\u001b[0m   handleFormSubmit: (event: SyntheticEvent) => void;\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m199\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'useRef'.\n\n    \u001b[7m199\u001b[0m   const formValuesRef = useRef<Record<string, any>>({});\n    \u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m200\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'useState'.\n\n    \u001b[7m200\u001b[0m   const [formState, setFormState] = useState<LowFormFormState>({\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m207\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'useCallback'.\n\n    \u001b[7m207\u001b[0m   const updateFormStateOnSubmit = useCallback(\n    \u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m218\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'useCallback'.\n\n    \u001b[7m218\u001b[0m   const setFormDirty = useCallback(() => {\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'useCallback'.\n\n    \u001b[7m225\u001b[0m   const getFormState = useCallback(() => ({ ...formState, formData: { ...formValuesRef.current } }), [formState]);\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m227\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'useEffect'.\n\n    \u001b[7m227\u001b[0m   useEffect(() => {\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m237\u001b[0m     return (event: SyntheticEvent) => {\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m245\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'useCallback'.\n\n    \u001b[7m245\u001b[0m   const handleFormSubmit = useCallback(\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m246\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m246\u001b[0m     async (event: SyntheticEvent) => {\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2739: \u001b[0mType '{}' is missing the following properties from type 'Omit<LowFormFormState, \"submitCount\" | \"isFormDirty\">': isFormInvalid, fieldErrors\n\n    \u001b[7m365\u001b[0m   const errorState: Omit<LowFormFormState, 'submitCount' | 'isFormDirty'> = {\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m371\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'formState'.\n\n    \u001b[7m371\u001b[0m     submitCount: formState.submitCount + 1,\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m375\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'setFormState'.\n\n    \u001b[7m375\u001b[0m   setFormState(expectedFormState);\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m377\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'formState'.\n\n    \u001b[7m377\u001b[0m   expect(formState).toEqual(expectedFormState);\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m412\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yourFunction'.\n\n    \u001b[7m412\u001b[0m   yourFunction(formStateCallback, formState, getFormState);\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m425\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yourFunction'.\n\n    \u001b[7m425\u001b[0m   yourFunction(undefined, formState, getFormState);\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m428\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'formStateCallback'.\n\n    \u001b[7m428\u001b[0m   expect(formStateCallback).not.toHaveBeenCalled();\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m439\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yourFunction'.\n\n    \u001b[7m439\u001b[0m   yourFunction(formStateCallback, formState, getFormState);\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m451\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yourFunction'.\n\n    \u001b[7m451\u001b[0m   const result = yourFunction(key, defaultValue)(event);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m453\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"testKey\"' can't be used to index type '{}'.\n      Property 'testKey' does not exist on type '{}'.\n\n    \u001b[7m453\u001b[0m   expect(formValuesRef.current[key]).toBe(defaultValue);\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m461\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yourFunction'.\n\n    \u001b[7m461\u001b[0m   const result = yourFunction(key)(event);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m463\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"testKey\"' can't be used to index type '{}'.\n      Property 'testKey' does not exist on type '{}'.\n\n    \u001b[7m463\u001b[0m   expect(formValuesRef.current[key]).toBe('');\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m473\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yourFunction'.\n\n    \u001b[7m473\u001b[0m   const result = yourFunction(key)(event);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m483\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'yourFunction'.\n\n    \u001b[7m483\u001b[0m   const result = yourFunction(key)(event);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m485\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"testKey\"' can't be used to index type '{}'.\n      Property 'testKey' does not exist on type '{}'.\n\n    \u001b[7m485\u001b[0m   expect(formValuesRef.current[key]).toBe('testValue');\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m488\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m488\u001b[0m   const event = { target: document.createElement('input') } as SyntheticEvent;\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m494\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m494\u001b[0m   const result = (event: SyntheticEvent) => {\n    \u001b[7m   \u001b[0m \u001b[91m                         ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m498\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"exampleKey\"' can't be used to index type '{}'.\n      Property 'exampleKey' does not exist on type '{}'.\n\n    \u001b[7m498\u001b[0m     formValuesRef.current[key] = (event.target as HTMLInputElement).value;\n    \u001b[7m   \u001b[0m \u001b[91m    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m504\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"exampleKey\"' can't be used to index type '{}'.\n      Property 'exampleKey' does not exist on type '{}'.\n\n    \u001b[7m504\u001b[0m   expect(formValuesRef.current[key]).toBe((event.target as HTMLInputElement).value);\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m508\u001b[0m   const event = { target: document.createElement('input') } as SyntheticEvent;\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m514\u001b[0m   const result = (event: SyntheticEvent) => {\n    \u001b[7m   \u001b[0m \u001b[91m                         ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m518\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"exampleKey\"' can't be used to index type '{}'.\n      Property 'exampleKey' does not exist on type '{}'.\n\n    \u001b[7m518\u001b[0m     formValuesRef.current[key] = (event.target as HTMLInputElement).value;\n    \u001b[7m   \u001b[0m \u001b[91m    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m524\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"exampleKey\"' can't be used to index type '{}'.\n      Property 'exampleKey' does not exist on type '{}'.\n\n    \u001b[7m524\u001b[0m   expect(formValuesRef.current[key]).toBe((event.target as HTMLInputElement).value);\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m533\u001b[0m   const asyncFunction = async (event: SyntheticEvent) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m559\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m559\u001b[0m   const asyncFunction = async (event: SyntheticEvent) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m586\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m586\u001b[0m   const asyncFunction = async (event: SyntheticEvent) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/useLowForm.test.ts\u001b[0m:\u001b[93m613\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SyntheticEvent'.\n\n    \u001b[7m613\u001b[0m   const asyncFunction = async (event: SyntheticEvent) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~\u001b[0m\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/lowForm/tests/src/useLowForm.test.ts","startTime":1694322434378,"status":"failed","summary":""}],"wasInterrupted":false}