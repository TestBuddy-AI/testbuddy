{"numFailedTestSuites":1,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1694492204448,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1694492206137,"message":"  ● Test suite failed to run\n\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m69\u001b[0m   const result = functionName();\n    \u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m79\u001b[0m   const result = functionName(providedChildren);\n    \u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m93\u001b[0m   const result = functionName(providedChildren);\n    \u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m104\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m104\u001b[0m   const result = functionName(providedChildren);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m121\u001b[0m   const result = functionName(providedChildren, true);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m134\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m134\u001b[0m   const result = functionName(providedChildren);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m147\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m147\u001b[0m   const result = functionName(providedChildren, false, true);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m163\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m163\u001b[0m   const result = functionName(providedChildren, false, false, formState);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m175\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'functionName'.\n\n    \u001b[7m175\u001b[0m   const result = functionName(providedChildren);\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7034: \u001b[0mVariable 'mutatedArray' implicitly has type 'any[]' in some locations where its type cannot be determined.\n\n    \u001b[7m195\u001b[0m   const mutatedArray = [];\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m4\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'child' implicitly has an 'any' type.\n\n    \u001b[7m196\u001b[0m   (child, index) => {\n    \u001b[7m   \u001b[0m \u001b[91m   ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'index' implicitly has an 'any' type.\n\n    \u001b[7m196\u001b[0m   (child, index) => {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m197\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 0 arguments, but got 1.\n\n    \u001b[7m197\u001b[0m     if (isValidElement(child)) {\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'cloneElement'.\n\n    \u001b[7m221\u001b[0m           cloneElement(child, {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m224\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 0 arguments, but got 2.\n\n    \u001b[7m224\u001b[0m             onChange: registerElement(id, defaultValue || defaultChecked),\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m229\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'fieldErrors' does not exist on type 'never'.\n\n    \u001b[7m229\u001b[0m           const message = formState?.fieldErrors?.[id];\n    \u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m230\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2786: \u001b[0m'ErrorComponent' cannot be used as a JSX component.\n      Its return type 'void' is not a valid JSX element.\n\n    \u001b[7m230\u001b[0m           const WrappedErrorComponent = () => (message ? <ErrorComponent message={message} name={id} /> : null);\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m230\u001b[0m:\u001b[93m74\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ message: any; name: any; }' is not assignable to type 'IntrinsicAttributes'.\n      Property 'message' does not exist on type 'IntrinsicAttributes'.\n\n    \u001b[7m230\u001b[0m           const WrappedErrorComponent = () => (message ? <ErrorComponent message={message} name={id} /> : null);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                         ~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m235\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'cloneElement'.\n\n    \u001b[7m235\u001b[0m           cloneElement(child, {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'copyFormPropsToChildren'.\n\n    \u001b[7m237\u001b[0m             children: copyFormPropsToChildren(children),\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m248\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7005: \u001b[0mVariable 'mutatedArray' implicitly has an 'any[]' type.\n\n    \u001b[7m248\u001b[0m   expect(mutatedArray).toMatchSnapshot();\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m265\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7034: \u001b[0mVariable 'mutatedArray' implicitly has type 'any[]' in some locations where its type cannot be determined.\n\n    \u001b[7m265\u001b[0m   const mutatedArray = [];\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m266\u001b[0m:\u001b[93m4\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'child' implicitly has an 'any' type.\n\n    \u001b[7m266\u001b[0m   (child, index) => {\n    \u001b[7m   \u001b[0m \u001b[91m   ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m266\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'index' implicitly has an 'any' type.\n\n    \u001b[7m266\u001b[0m   (child, index) => {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 0 arguments, but got 1.\n\n    \u001b[7m267\u001b[0m     if (isValidElement(child)) {\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m291\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'cloneElement'.\n\n    \u001b[7m291\u001b[0m           cloneElement(child, {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m294\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 0 arguments, but got 2.\n\n    \u001b[7m294\u001b[0m             onChange: registerElement(id, defaultValue || defaultChecked),\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m299\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'fieldErrors' does not exist on type 'never'.\n\n    \u001b[7m299\u001b[0m           const message = formState?.fieldErrors?.[id];\n    \u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m300\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2786: \u001b[0m'ErrorComponent' cannot be used as a JSX component.\n      Its return type 'void' is not a valid JSX element.\n\n    \u001b[7m300\u001b[0m           const WrappedErrorComponent = () => (message ? <ErrorComponent message={message} name={id} /> : null);\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m300\u001b[0m:\u001b[93m74\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ message: any; name: any; }' is not assignable to type 'IntrinsicAttributes'.\n      Property 'message' does not exist on type 'IntrinsicAttributes'.\n\n    \u001b[7m300\u001b[0m           const WrappedErrorComponent = () => (message ? <ErrorComponent message={message} name={id} /> : null);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                         ~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m305\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'cloneElement'.\n\n    \u001b[7m305\u001b[0m           cloneElement(child, {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m307\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'copyFormPropsToChildren'.\n\n    \u001b[7m307\u001b[0m             children: copyFormPropsToChildren(children),\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m318\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7005: \u001b[0mVariable 'mutatedArray' implicitly has an 'any[]' type.\n\n    \u001b[7m318\u001b[0m   expect(mutatedArray).toMatchSnapshot();\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m335\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7034: \u001b[0mVariable 'mutatedArray' implicitly has type 'any[]' in some locations where its type cannot be determined.\n\n    \u001b[7m335\u001b[0m   const mutatedArray = [];\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m336\u001b[0m:\u001b[93m4\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'child' implicitly has an 'any' type.\n\n    \u001b[7m336\u001b[0m   (child, index) => {\n    \u001b[7m   \u001b[0m \u001b[91m   ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m336\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'index' implicitly has an 'any' type.\n\n    \u001b[7m336\u001b[0m   (child, index) => {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m337\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 0 arguments, but got 1.\n\n    \u001b[7m337\u001b[0m     if (isValidElement(child)) {\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m361\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'cloneElement'.\n\n    \u001b[7m361\u001b[0m           cloneElement(child, {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m364\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 0 arguments, but got 2.\n\n    \u001b[7m364\u001b[0m             onChange: registerElement(id, defaultValue || defaultChecked),\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m369\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'fieldErrors' does not exist on type 'never'.\n\n    \u001b[7m369\u001b[0m           const message = formState?.fieldErrors?.[id];\n    \u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2786: \u001b[0m'ErrorComponent' cannot be used as a JSX component.\n      Its return type 'void' is not a valid JSX element.\n\n    \u001b[7m370\u001b[0m           const WrappedErrorComponent = () => (message ? <ErrorComponent message={message} name={id} /> : null);\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m74\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ message: any; name: any; }' is not assignable to type 'IntrinsicAttributes'.\n      Property 'message' does not exist on type 'IntrinsicAttributes'.\n\n    \u001b[7m370\u001b[0m           const WrappedErrorComponent = () => (message ? <ErrorComponent message={message} name={id} /> : null);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                         ~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m375\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'cloneElement'.\n\n    \u001b[7m375\u001b[0m           cloneElement(child, {\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m377\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'copyFormPropsToChildren'.\n\n    \u001b[7m377\u001b[0m             children: copyFormPropsToChildren(children),\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m388\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7005: \u001b[0mVariable 'mutatedArray' implicitly has an 'any[]' type.\n\n    \u001b[7m388\u001b[0m   expect(mutatedArray).toMatchSnapshot();\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m394\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'shallow'.\n\n    \u001b[7m394\u001b[0m   const wrapper = shallow(<Component message={message} id={id} />);\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m394\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'Component'.\n\n    \u001b[7m394\u001b[0m   const wrapper = shallow(<Component message={message} id={id} />);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m395\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'ErrorComponent'.\n\n    \u001b[7m395\u001b[0m   expect(wrapper.find(ErrorComponent).props()).toEqual({ message, name: id });\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m401\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'shallow'.\n\n    \u001b[7m401\u001b[0m   const wrapper = shallow(<Component message={message} id={id} />);\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m401\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'Component'.\n\n    \u001b[7m401\u001b[0m   const wrapper = shallow(<Component message={message} id={id} />);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~\u001b[0m\n    \u001b[96mtests/src/FormCopy.test.tsx\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'ErrorComponent'.\n\n    \u001b[7m402\u001b[0m   expect(wrapper.find(ErrorComponent).exists()).toBe(false);\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~\u001b[0m\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/lowForm/tests/src/FormCopy.test.tsx","startTime":1694492206137,"status":"failed","summary":""}],"wasInterrupted":false}