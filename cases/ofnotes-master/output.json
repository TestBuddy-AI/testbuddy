{
    "numFailedTestSuites": 17,
    "numFailedTests": 0,
    "numPassedTestSuites": 0,
    "numPassedTests": 0,
    "numPendingTestSuites": 0,
    "numPendingTests": 0,
    "numRuntimeErrorTestSuites": 17,
    "numTodoTests": 0,
    "numTotalTestSuites": 17,
    "numTotalTests": 0,
    "openHandles": [],
    "snapshot": {
        "added": 0,
        "didUpdate": false,
        "failure": false,
        "filesAdded": 0,
        "filesRemoved": 0,
        "filesRemovedList": [],
        "filesUnmatched": 0,
        "filesUpdated": 0,
        "matched": 0,
        "total": 0,
        "unchecked": 0,
        "uncheckedKeysByFile": [],
        "unmatched": 0,
        "updated": 0
    },
    "startTime": 1692401744526,
    "success": false,
    "testResults": [
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/sidebarContext.spec.tsx: Unexpected token (26:19)\n\n    \u001b[0m \u001b[90m 24 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 25 | \u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mTestComponent\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m \u001b[33m=\u001b[39m (props) \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 27 | \u001b[39m  \u001b[36mconst\u001b[39m { expanded\u001b[33m,\u001b[39m setExpanded\u001b[33m,\u001b[39m toggleExpanded } \u001b[33m=\u001b[39m useSidebarContext()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 28 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m\n    \u001b[0m \u001b[90m 29 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:1007:18)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:688:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:209:21)\u001b[22m\n      \u001b[2mat Parser.parseStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:149:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:863:25)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:835:10)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/sidebarContext.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenu.spec.tsx: Unexpected token (22:45)\n\n    \u001b[0m \u001b[90m 20 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 21 | \u001b[39m  it(\u001b[32m\"matches snapshot\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment\u001b[33m,\u001b[39m getByText } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mSideMenu\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 23 | \u001b[39m      sideBarCtx\u001b[33m:\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 24 | \u001b[39m        \u001b[33m...\u001b[39mdefaultSidebarCtx\u001b[33m,\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 25 | \u001b[39m      }\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenu.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/formPage.spec.tsx: Unexpected reserved word 'interface' (36:0)\n\n    \u001b[0m \u001b[90m 34 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 35 | \u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 | \u001b[39minterface \u001b[33mRenderEditing\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 37 | \u001b[39m  fullWidth\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 38 | \u001b[39m  note\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mNote\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 39 | \u001b[39m}\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.checkReservedWord (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:2209:14)\u001b[22m\n      \u001b[2mat Parser.parseIdentifierName (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:2149:12)\u001b[22m\n      \u001b[2mat Parser.parseIdentifier (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:2108:23)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:932:25)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/formPage.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/renderedNote.spec.tsx: Unexpected token (7:19)\n\n    \u001b[0m \u001b[90m  5 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  6 | \u001b[39mdescribe(\u001b[32m\"RenderedNote component\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m  \u001b[36mconst\u001b[39m defaultNote\u001b[33m:\u001b[39m \u001b[33mUnsavedNote\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  8 | \u001b[39m    title\u001b[33m:\u001b[39m \u001b[32m\"Test Note\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  9 | \u001b[39m    md\u001b[33m:\u001b[39m \u001b[32m\"# test note header\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 | \u001b[39m    tags\u001b[33m:\u001b[39m []\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:1007:18)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:688:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:209:21)\u001b[22m\n      \u001b[2mat Parser.parseStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:149:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:863:25)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:835:10)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/renderedNote.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/noteContext.spec.tsx: Unexpected reserved word 'interface' (18:0)\n\n    \u001b[0m \u001b[90m 16 | \u001b[39m\u001b[36mconst\u001b[39m mockRouter \u001b[33m=\u001b[39m mocked(router)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 17 | \u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39minterface \u001b[33mTestProps\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 19 | \u001b[39m  handleGet(getNote\u001b[33m:\u001b[39m (slug\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mNote\u001b[39m \u001b[33m|\u001b[39m undefined\u001b[33m>\u001b[39m)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 20 | \u001b[39m  handleCreate(createNote\u001b[33m:\u001b[39m (values\u001b[33m:\u001b[39m \u001b[33mUserNoteFields\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 21 | \u001b[39m  handleUpdate(createNote\u001b[33m:\u001b[39m (id\u001b[33m:\u001b[39m number\u001b[33m,\u001b[39m values\u001b[33m:\u001b[39m \u001b[33mUserNoteFields\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.checkReservedWord (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:2209:14)\u001b[22m\n      \u001b[2mat Parser.parseIdentifierName (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:2149:12)\u001b[22m\n      \u001b[2mat Parser.parseIdentifier (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:2108:23)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:932:25)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/noteContext.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/noteForm.spec.tsx: Unexpected token (28:34)\n\n    \u001b[0m \u001b[90m 26 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 27 | \u001b[39m  it(\u001b[32m\"matches snapshot\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mNoteForm\u001b[39m {\u001b[33m...\u001b[39mdefaultProps} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 29 | \u001b[39m    expect(asFragment())\u001b[33m.\u001b[39mtoMatchSnapshot()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 30 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 31 | \u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/noteForm.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/db/__tests__/queries.spec.ts: Unexpected token, expected \",\" (84:25)\n\n    \u001b[0m \u001b[90m 82 | \u001b[39m    expect\u001b[33m.\u001b[39massertions(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 83 | \u001b[39m    \u001b[36mreturn\u001b[39m expect(\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 84 | \u001b[39m      db\u001b[33m.\u001b[39mupdate(undefined\u001b[33m!\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 85 | \u001b[39m        title\u001b[33m:\u001b[39m \u001b[32m\"some title\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 86 | \u001b[39m        md\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 87 | \u001b[39m        tags\u001b[33m:\u001b[39m []\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.expect (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:129:28)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:800:14)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:660:31)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:567:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:548:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/db/__tests__/queries.spec.ts",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenuHeader.spec.tsx: Unexpected token (20:34)\n\n    \u001b[0m \u001b[90m 18 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 19 | \u001b[39m  it(\u001b[32m\"matches snapshot\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mSideMenuHeader\u001b[39m {\u001b[33m...\u001b[39mdefaultProps} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 21 | \u001b[39m    expect(asFragment())\u001b[33m.\u001b[39mtoMatchSnapshot()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 22 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenuHeader.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/themeContext.spec.tsx: Unexpected token (17:19)\n\n    \u001b[0m \u001b[90m 15 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 16 | \u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mTestComponent\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m \u001b[33m=\u001b[39m (props) \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 18 | \u001b[39m  \u001b[36mconst\u001b[39m { paletteType\u001b[33m,\u001b[39m togglePalette } \u001b[33m=\u001b[39m useThemeContext()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 19 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m\n    \u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseVar (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:1007:18)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:688:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:209:21)\u001b[22m\n      \u001b[2mat Parser.parseStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:149:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:863:25)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.js\u001b[2m:835:10)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/themeContext.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/homePage.spec.tsx: Unexpected token (16:34)\n\n    \u001b[0m \u001b[90m 14 | \u001b[39m      loading\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 15 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mHome\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 17 | \u001b[39m    expect(asFragment())\u001b[33m.\u001b[39mtoMatchSnapshot()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 18 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 19 | \u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/homePage.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/notePage.spec.tsx: Unexpected token (24:21)\n\n    \u001b[0m \u001b[90m 22 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[36mconst\u001b[39m renderPage \u001b[33m=\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 | \u001b[39m  \u001b[36mconst\u001b[39m ret \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mNote\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 25 | \u001b[39m    noteCtx\u001b[33m:\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 26 | \u001b[39m      getNote\u001b[33m:\u001b[39m mockGetNote\u001b[33m,\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 27 | \u001b[39m    }\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/notePage.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/confirmDelete.spec.tsx: Unexpected token (22:33)\n\n    \u001b[0m \u001b[90m 20 | \u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 21 | \u001b[39m  it(\u001b[32m\"calls onClose on cancel click\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 | \u001b[39m    \u001b[36mconst\u001b[39m { getByText } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mConfirmDeleteModal\u001b[39m {\u001b[33m...\u001b[39mdefaultProps} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 23 | \u001b[39m    fireEvent\u001b[33m.\u001b[39mclick(getByText(\u001b[32m\"Cancel\"\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 24 | \u001b[39m    await wait(() \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 25 | \u001b[39m      expect(closeMock)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/confirmDelete.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/createNoteFAB.spec.tsx: Unexpected token (15:34)\n\n    \u001b[0m \u001b[90m 13 | \u001b[39mdescribe(\u001b[32m\"CreateNoteFAB component\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 14 | \u001b[39m  it(\u001b[32m\"matches snapshot\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mCreateNoteFAB\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 16 | \u001b[39m    expect(asFragment())\u001b[33m.\u001b[39mtoMatchSnapshot()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 17 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 18 | \u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/createNoteFAB.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/noteList.tsx: Unexpected token (7:34)\n\n    \u001b[0m \u001b[90m  5 | \u001b[39mdescribe(\u001b[32m\"NoteList component\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m  6 | \u001b[39m  it(\u001b[32m\"matches snapshot\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mNoteList\u001b[39m notes\u001b[33m=\u001b[39m{fakeNotes} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  8 | \u001b[39m    expect(asFragment())\u001b[33m.\u001b[39mtoMatchSnapshot()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  9 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/noteList.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/panel.spec.tsx: Unexpected token (7:34)\n\n    \u001b[0m \u001b[90m  5 | \u001b[39mdescribe(\u001b[32m\"MainPanel component\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m  6 | \u001b[39m  it(\u001b[32m\"matches snapshot\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mMainPanel\u001b[39m\u001b[33m>\u001b[39mtest\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mMainPanel\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  8 | \u001b[39m    expect(asFragment())\u001b[33m.\u001b[39mtoMatchSnapshot()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  9 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/panel.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenuFilter.spec.tsx: Unexpected token (15:6)\n\n    \u001b[0m \u001b[90m 13 | \u001b[39m  it(\u001b[32m\"matches snapshot\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 14 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment } \u001b[33m=\u001b[39m render(\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33mSideMenuFilter\u001b[39m onChange\u001b[33m=\u001b[39m{changeMock} value\u001b[33m=\u001b[39m\u001b[32m\"test value\"\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 16 | \u001b[39m    )\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 17 | \u001b[39m    expect(asFragment())\u001b[33m.\u001b[39mtoMatchSnapshot()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 18 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenuFilter.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [],
            "coverage": {},
            "endTime": 1692401746152,
            "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/layout.spec.tsx: Unexpected token (7:34)\n\n    \u001b[0m \u001b[90m  5 | \u001b[39mdescribe(\u001b[32m\"Layout component\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m  6 | \u001b[39m  it(\u001b[32m\"matches snapshot\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m    \u001b[36mconst\u001b[39m { asFragment } \u001b[33m=\u001b[39m render(\u001b[33m<\u001b[39m\u001b[33mLayout\u001b[39m\u001b[33m>\u001b[39mtest\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mLayout\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  8 | \u001b[39m    expect(asFragment())\u001b[33m.\u001b[39mtoMatchSnapshot()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m  9 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:241:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:236:17)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/parser/location.js\u001b[2m:220:17)\u001b[22m\n      \u001b[2mat Parser.unexpected (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:149:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1144:20)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:539:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:519:21)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:311:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:211:21)\u001b[22m\n",
            "name": "/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/layout.spec.tsx",
            "startTime": 1692401746152,
            "status": "failed",
            "summary": ""
        }
    ],
    "wasInterrupted": false
}