{"numFailedTestSuites":20,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":20,"numTodoTests":0,"numTotalTestSuites":20,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1694480936776,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/formPage.spec.tsx: Unexpected reserved word 'interface' (36:0)\n\n      34 | });\n      35 | \n    > 36 | interface RenderEditing {\n         | ^\n      37 |   fullWidth?: boolean;\n      38 |   note?: Note;\n      39 | }\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.checkReservedWord (node_modules/@babel/parser/src/parser/expression.js:2209:14)\n      at Parser.parseIdentifierName (node_modules/@babel/parser/src/parser/expression.js:2149:12)\n      at Parser.parseIdentifier (node_modules/@babel/parser/src/parser/expression.js:2108:23)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:932:25)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/formPage.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/notePage.spec.tsx: Unexpected token (24:21)\n\n      22 | \n      23 | const renderPage = async () => {\n    > 24 |   const ret = render(<Note />, {\n         |                      ^\n      25 |     noteCtx: {\n      26 |       getNote: mockGetNote,\n      27 |     },\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/notePage.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/homePage.spec.tsx: Unexpected token (16:34)\n\n      14 |       loading: false,\n      15 |     });\n    > 16 |     const { asFragment } = render(<Home />);\n         |                                   ^\n      17 |     expect(asFragment()).toMatchSnapshot();\n      18 |   });\n      19 |\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/pages/__tests__/homePage.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/db/__tests__/queries.spec.ts: Unexpected token, expected \",\" (84:25)\n\n      82 |     expect.assertions(1);\n      83 |     return expect(\n    > 84 |       db.update(undefined!, {\n         |                          ^\n      85 |         title: \"some title\",\n      86 |         md: \"\",\n      87 |         tags: [],\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.expect (node_modules/@babel/parser/src/parser/util.js:129:28)\n      at Parser.parseCallExpressionArguments (node_modules/@babel/parser/src/parser/expression.js:800:14)\n      at Parser.parseSubscript (node_modules/@babel/parser/src/parser/expression.js:660:31)\n      at Parser.parseSubscripts (node_modules/@babel/parser/src/parser/expression.js:567:19)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:548:17)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/db/__tests__/queries.spec.ts","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/sidebarContext.spec.tsx: Unexpected token (26:19)\n\n      24 | });\n      25 | \n    > 26 | const TestComponent: React.FC = (props) => {\n         |                    ^\n      27 |   const { expanded, setExpanded, toggleExpanded } = useSidebarContext();\n      28 |   return (\n      29 |     <div>\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseVar (node_modules/@babel/parser/src/parser/statement.js:1007:18)\n      at Parser.parseVarStatement (node_modules/@babel/parser/src/parser/statement.js:688:10)\n      at Parser.parseStatementContent (node_modules/@babel/parser/src/parser/statement.js:209:21)\n      at Parser.parseStatement (node_modules/@babel/parser/src/parser/statement.js:149:17)\n      at Parser.parseBlockOrModuleBlockBody (node_modules/@babel/parser/src/parser/statement.js:863:25)\n      at Parser.parseBlockBody (node_modules/@babel/parser/src/parser/statement.js:835:10)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/sidebarContext.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/noteContext.spec.tsx: Unexpected reserved word 'interface' (18:0)\n\n      16 | const mockRouter = mocked(router);\n      17 | \n    > 18 | interface TestProps {\n         | ^\n      19 |   handleGet(getNote: (slug: string) => Promise<Note | undefined>): void;\n      20 |   handleCreate(createNote: (values: UserNoteFields) => void): void;\n      21 |   handleUpdate(createNote: (id: number, values: UserNoteFields) => void): void;\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.checkReservedWord (node_modules/@babel/parser/src/parser/expression.js:2209:14)\n      at Parser.parseIdentifierName (node_modules/@babel/parser/src/parser/expression.js:2149:12)\n      at Parser.parseIdentifier (node_modules/@babel/parser/src/parser/expression.js:2108:23)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:932:25)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/noteContext.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/themeContext.spec.tsx: Unexpected token (17:19)\n\n      15 | });\n      16 | \n    > 17 | const TestComponent: React.FC = (props) => {\n         |                    ^\n      18 |   const { paletteType, togglePalette } = useThemeContext();\n      19 |   return (\n      20 |     <div>\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseVar (node_modules/@babel/parser/src/parser/statement.js:1007:18)\n      at Parser.parseVarStatement (node_modules/@babel/parser/src/parser/statement.js:688:10)\n      at Parser.parseStatementContent (node_modules/@babel/parser/src/parser/statement.js:209:21)\n      at Parser.parseStatement (node_modules/@babel/parser/src/parser/statement.js:149:17)\n      at Parser.parseBlockOrModuleBlockBody (node_modules/@babel/parser/src/parser/statement.js:863:25)\n      at Parser.parseBlockBody (node_modules/@babel/parser/src/parser/statement.js:835:10)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/hooks/__tests__/themeContext.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenuFilter.spec.tsx: Unexpected token (15:6)\n\n      13 |   it(\"matches snapshot\", () => {\n      14 |     const { asFragment } = render(\n    > 15 |       <SideMenuFilter onChange={changeMock} value=\"test value\" />\n         |       ^\n      16 |     );\n      17 |     expect(asFragment()).toMatchSnapshot();\n      18 |   });\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenuFilter.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/confirmDelete.spec.tsx: Unexpected token (22:33)\n\n      20 | \n      21 |   it(\"calls onClose on cancel click\", async () => {\n    > 22 |     const { getByText } = render(<ConfirmDeleteModal {...defaultProps} />);\n         |                                  ^\n      23 |     fireEvent.click(getByText(\"Cancel\"));\n      24 |     await wait(() => {\n      25 |       expect(closeMock).toHaveBeenCalled();\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/confirmDelete.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenuHeader.spec.tsx: Unexpected token (20:34)\n\n      18 | \n      19 |   it(\"matches snapshot\", () => {\n    > 20 |     const { asFragment } = render(<SideMenuHeader {...defaultProps} />);\n         |                                   ^\n      21 |     expect(asFragment()).toMatchSnapshot();\n      22 |   });\n      23 |\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenuHeader.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/noteList.tsx: Unexpected token (7:34)\n\n       5 | describe(\"NoteList component\", () => {\n       6 |   it(\"matches snapshot\", () => {\n    >  7 |     const { asFragment } = render(<NoteList notes={fakeNotes} />);\n         |                                   ^\n       8 |     expect(asFragment()).toMatchSnapshot();\n       9 |   });\n      10 |\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/noteList.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/noteForm.spec.tsx: Unexpected token (28:34)\n\n      26 | \n      27 |   it(\"matches snapshot\", () => {\n    > 28 |     const { asFragment } = render(<NoteForm {...defaultProps} />);\n         |                                   ^\n      29 |     expect(asFragment()).toMatchSnapshot();\n      30 |   });\n      31 |\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/noteForm.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/createNoteFAB.spec.tsx: Unexpected token (15:34)\n\n      13 | describe(\"CreateNoteFAB component\", () => {\n      14 |   it(\"matches snapshot\", () => {\n    > 15 |     const { asFragment } = render(<CreateNoteFAB />);\n         |                                   ^\n      16 |     expect(asFragment()).toMatchSnapshot();\n      17 |   });\n      18 |\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/createNoteFAB.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenu.spec.tsx: Unexpected token (22:45)\n\n      20 | \n      21 |   it(\"matches snapshot\", async () => {\n    > 22 |     const { asFragment, getByText } = render(<SideMenu />, {\n         |                                              ^\n      23 |       sideBarCtx: {\n      24 |         ...defaultSidebarCtx,\n      25 |       },\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/sideMenu.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/panel.spec.tsx: Unexpected token (7:34)\n\n       5 | describe(\"MainPanel component\", () => {\n       6 |   it(\"matches snapshot\", () => {\n    >  7 |     const { asFragment } = render(<MainPanel>test</MainPanel>);\n         |                                   ^\n       8 |     expect(asFragment()).toMatchSnapshot();\n       9 |   });\n      10 |\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/panel.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/layout.spec.tsx: Unexpected token (7:34)\n\n       5 | describe(\"Layout component\", () => {\n       6 |   it(\"matches snapshot\", () => {\n    >  7 |     const { asFragment } = render(<Layout>test</Layout>);\n         |                                   ^\n       8 |     expect(asFragment()).toMatchSnapshot();\n       9 |   });\n      10 | });\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/layout.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/renderedNote.spec.tsx: Unexpected token (7:19)\n\n       5 | \n       6 | describe(\"RenderedNote component\", () => {\n    >  7 |   const defaultNote: UnsavedNote = {\n         |                    ^\n       8 |     title: \"Test Note\",\n       9 |     md: \"# test note header\",\n      10 |     tags: [],\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseVar (node_modules/@babel/parser/src/parser/statement.js:1007:18)\n      at Parser.parseVarStatement (node_modules/@babel/parser/src/parser/statement.js:688:10)\n      at Parser.parseStatementContent (node_modules/@babel/parser/src/parser/statement.js:209:21)\n      at Parser.parseStatement (node_modules/@babel/parser/src/parser/statement.js:149:17)\n      at Parser.parseBlockOrModuleBlockBody (node_modules/@babel/parser/src/parser/statement.js:863:25)\n      at Parser.parseBlockBody (node_modules/@babel/parser/src/parser/statement.js:835:10)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/src/components/__tests__/renderedNote.spec.tsx","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/tests/src/db/db.test.ts:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,global,jest){import Dexie from \"dexie\";\n                                                                                             ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at new Script (node:vm:100:7)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:537:17)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:579:25)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/tests/src/db/db.test.ts","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/tests/src/serviceWorker.test.ts: Unexpected token, expected \",\" (14:25)\n\n      12 |   // Mock URL constructor\n      13 |   class MockURL {\n    > 14 |     constructor(publicUrl: string, locationHref: string) {}\n         |                          ^\n      15 |     origin: string = 'https://example.com';\n      16 |   }\n      17 |   Object.defineProperty(window, 'URL', {\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.expect (node_modules/@babel/parser/src/parser/util.js:129:28)\n      at Parser.parseBindingList (node_modules/@babel/parser/src/parser/lval.js:276:14)\n      at Parser.parseFunctionParams (node_modules/@babel/parser/src/parser/statement.js:1113:24)\n      at Parser.parseMethod (node_modules/@babel/parser/src/parser/expression.js:1860:10)\n      at Parser.pushClassMethod (node_modules/@babel/parser/src/parser/statement.js:1544:12)\n      at Parser.parseClassMemberWithIsStatic (node_modules/@babel/parser/src/parser/statement.js:1391:12)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/tests/src/serviceWorker.test.ts","startTime":1694480937910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1694480937910,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/tests/src/components/CreateNoteFAB.test.tsx: Unexpected token (39:26)\n\n      37 |   const theme = useTheme();\n      38 |   const collapse = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    > 39 |   const wrapper = shallow(<Fab classes={{ root: classes.root }} variant={collapse ? \"round\" : \"extended\"} color=\"primary\" component={Link} to=\"/create\" size=\"large\" />);\n         |                           ^\n      40 |   \n      41 |   expect(wrapper.hasClass(classes.root)).toBe(true);\n      42 | });\n\n      at Parser._raise (node_modules/@babel/parser/src/parser/location.js:241:45)\n      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/location.js:236:17)\n      at Parser.raise (node_modules/@babel/parser/src/parser/location.js:220:17)\n      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:149:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1144:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:539:23)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:519:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:311:23)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/src/parser/expression.js:263:23)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.js:211:21)\n","name":"/Users/camilo.salinas/Documents/Personal/Github/testbuddy/cases/ofnotes-master/tests/src/components/CreateNoteFAB.test.tsx","startTime":1694480937910,"status":"failed","summary":""}],"wasInterrupted":false}